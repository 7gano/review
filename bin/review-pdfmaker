#!/usr/bin/env ruby
#
# Copyright (c) 2010 Kenshi Muto and Masayoshi Takahashi
#
# This program is free software.
# You can distribute or modify this program under the terms of
# the GNU LGPL, Lesser General Public License version 2.1.
# For details of the GNU LGPL, see the file "COPYING".
#

require 'yaml'

def error(msg)
  $stderr.puts "#{File.basename($0, '.*')}: error: #{msg}"
  exit 1
end

def usage
  $stderr.puts "Usage: #{$0} configfile"
  exit 0
end

def check_book
  pdf_file = values["bookname"]+".pdf"
  if File.exists? pdf_file
    error "file already exists:#{pdf_file}"
  end
end

def build_path(values)
  if values["debug"].nil?
    Dir.mktmpdir+"/#{values["bookname"]}"
  else
    "./#{values["bookname"]}"
  end
end

def main
  usage if ARGV.size != 1

  yamlfile = ARGV[0]
  values = YAML.load_file(yamlfile)
  check_book(values)
  basedir = Dir.pwd
  path = build_path(values)
  Dir.mkdir(path)


  if File.exists?("PREDEF")
    File.open("PREDEF") {|chaps|
      chaps.each_line {|l|
        next if l =~ /^#/
        pre = pre + 1
        toccount = toccount + 1
        fork {
          STDOUT.reopen("#{path}/pre#{pre}.tex")
          exec("review-compile --target=latex --level=#{values["secnolevel"]} #{values["params"]} #{l}")
        }
        Process.waitall
        @pre_str << %Q|\input{pre#{pre}.tex}\n|
      }
    }
  end
  if File.exists?("CHAPS")
    File.open("CHAPS") {|chaps|
      chaps.each_line {|l|
        body = body + 1
        toccount = toccount + 1
        next if l =~ /^#/
        fork {
          STDOUT.reopen("#{path}/chap#{body}.tex")
          exec("review-compile --target=latex --level=#{values["secnolevel"]} #{values["params"]} #{l}")
        }
        Process.waitall
        @chap_str << %Q|\input{chap#{body}.tex}\n|
      }
    }
  end
  if File.exists?("POSTDEF")
    File.open("POSTDEF") {|chaps|
      chaps.each_line {|l|
        next if l =~ /^#/
        post = post + 1
        toccount = toccount + 1
        fork {
          STDOUT.reopen("#{path}/post#{post}.tex")
          exec("review-compile --target=latex --level=#{values["secnolevel"]} #{values["params"]} #{l}")
        }
        Process.waitall
        @post_str << %Q|\input{post#{post}.tex}\n|
      }
    }
  end
  values["pre_str"] = @pre_str
  values["chap_str"] = @chap_str
  values["post_str"] = @post_str
  copy_images("./images", "#{path}/images")

  Dir.chdir(path) {
    template = get_template(values)
    File.open("./book.tex", "wb"){|f| f.write(template)}
   
    ## do compile
    fork {
      exec("platex book.tex")
    }
    Process.waitall
    fork {
      exec("dvipdfmx book.dvi")
    }
    Process.waitall
  }
  File.cp("#{path}/book.pdf", basedir)

end

def copy_images(from, to)
  if File.exist?(from)
    Dir.mkdir(to)
    copyImagesToDir(from, to)
    Dir.chdir(to) {
      fork {
        exec("ebb *.png *.jpg")
      }
    }
  Process.waitall
  end
end

def get_template(values)
  str = <<EOB
\documentclass[oneside]{jsbook}
\usepackage[deluxe]{otf}
\usepackage[dvipdfmx]{color}
\usepackage[dvipdfmx]{graphicx}
\usepackage{framed}
\usepackage{wrapfig}
\definecolor{shadecolor}{gray}{0.9}
\usepackage{eclbkbox}

\usepackage{ascmac}

\usepackage{float}

\usepackage{tatsumacro}

\usepackage[top=10zw,bottom=12zw,left=10zw,right=10zw]{geometry}
%\usepackage[top=5zw,bottom=5zw,left=1zw,right=1zw]{geometry}

\usepackage{fancyhdr}
\pagestyle{fancy}
\renewcommand{\chaptermark}[1]{\markboth{第\ \thechapter\ 章~#1}{}}

\renewcommand{\headfont}{\gtfamily\sffamily\bfseries}

\newcommand{\parasep}{\vspace*{3zh}}
\setlength{\footskip}{30pt}

\usepackage[dvipdfm,bookmarks=true,bookmarksnumbered=true,colorlinks=true,%
            pdftitle={#{values["booktitle"]}},%
            pdfauthor={#{values["aut"]}}]{hyperref}

%% Bookmarkの文字化け対策（日本語向け）
\ifnum 46273=\euc"B4C1 % 46273 == 0xB4C1 == 漢(EUC-JP)
  \AtBeginDvi{\special{pdf:tounicode EUC-UCS2}}%
\else
  \AtBeginDvi{\special{pdf:tounicode 90ms-RKSJ-UCS2}}%
\fi

\newcommand{\mytitle}[1]{%
  \title{\usefont{T1}{pag}{b}{n} \Huge\gtfamily\ebseries #1\vspace*{10zh}}}
%  \title{\usefont{T1}{pag}{b}{n} \Huge\gtfamily\ebseries #1\vspace*{5zh}}}
\newcommand{\myauthor}[1]{%
  \author{\usefont{T1}{pag}{m}{n} \gtfamily \huge #1\vspace*{1zh}}}
\newcommand{\mydate}[1]{%
  \date{\usefont{T1}{pag}{m}{n} \gtfamily #1 \hspace{2zw}#{values["prt"]}　発行}}

\newenvironment{reviewimage}{%
  \begin{figure}[H]
    \begin{center}}{%
    \end{center}
  \end{figure}}

\newenvironment{reviewemlist}{%
  \begin{shaded}}{%
  \end{shaded}}

\newenvironment{reviewlist}{%
  \begin{quote}}{%
  \end{quote}}

\newenvironment{reviewcmd}{%
  \begin{quote}}{%
  \end{quote}}

\newenvironment{reviewtable}{%
  \begin{quote}
    \begin{tabular}}{%
    \end{tabular}
  \end{quote}}

\newenvironment{reviewcolumn}[2]{%
  %%\begin{center}
   %% \begin{minipage}{0.9\linewidth}
     \begin{framed}
%    \begin{breakbox}
   %%     \setlength{\FrameSep}{2zw}}{%
   }{%
%    \end{breakbox}
      \end{framed}
   %% \end{minipage}
  %%\end{center}
  \vspace{2zw}}

\newcommand{\reviewcolumnhead}[2]{%
  \Large #2}

\newcommand{\reviewtablecaption}[2]{%
}

\newcommand{\reviewlistcaption}[2]{%
}

\newcommand{\reviewimageref}[1]{%
  図 #1}

\newcommand{\reviewminicolumntitle}[1]{%
  {コラム：\large #1}\\}

\newenvironment{reviewminicolumn}{%
 \begin{quote}
  \begin{screen}}{%
  \end{screen}
  \end{quote}}



\usepackage[T1]{fontenc}

\begin{document}

\usefont{T1}{phv}{m}{n}
\mgfamily


\mytitle{#{values["booktitle"]}}
\myauthor{#{values[aut]}}
\mydate{\today 版}

\maketitle

\frontmatter
\tableofcontents

%% preface
#{values["pre_str"]}

\mainmatter

#{values["chap_str"]}

\backmatter

#{values["post_str"]}

\end{document}

EOB
end



main
